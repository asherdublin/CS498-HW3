import re
from flask import Flask
from google.cloud import bigtable

app = Flask(__name__)
project_id  = 'cs-411-hw2'
instance_id = 'ev-bigtable'
table_id    = 'ev-population'
client = bigtable.Client(project=project_id, admin=True)
instance = client.instance(instance_id)
table = instance.table(table_id)

@app.route('/rows')
def get_total_rows():
    return str(sum(1 for _ in table.read_rows()))

@app.route('/Best-BMW')
def best_bmw():
    count = 0
    for row in table.read_rows():
        try:
            make = row.cells['ev_info'][b'make'][0].value.decode('utf-8').strip()
            if make != 'BMW':
                continue
            er_str = row.cells['ev_info'][b'electric_range'][0].value.decode('utf-8').strip()
            m = re.search(r"(\d+(?:\.\d+)?)", er_str)
            if not m or float(m.group(1)) <= 100:
                continue
            count += 1
        except Exception:
            continue
    return str(count)

@app.route('/tesla-owners')
def tesla_owners():
    count = 0
    for row in table.read_rows():
        try:
            make = row.cells['ev_info'][b'make'][0].value.decode('utf-8').strip()
            city = row.cells['ev_info'][b'city'][0].value.decode('utf-8').strip()
            if make == 'TESLA' and city == 'Seattle':
                count += 1
        except Exception:
            continue
    return str(count)

@app.route('/update')
def update_vehicle():
    ID = b'257246118'
    row = table.direct_row(ID)
    row.set_cell('ev_info', b'electric_range', b'200')
    row.commit()
    return "Success"

@app.route('/delete')
def delete_old_records():
    to_delete = []
    for row in table.read_rows():
        try:
            year_str = row.cells['ev_info'][b'model_year'][0].value.decode('utf-8').strip()
            if int(year_str) < 2014:
                to_delete.append(row.row_key)
        except Exception:
            continue
    for rk in to_delete:
        dr = table.direct_row(rk)
        dr.delete()
        dr.commit()
    return str(sum(1 for _ in table.read_rows()))

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=8080)
